/*
 * This file is generated by jOOQ.
 */
package org.siu.saku.jooq;


import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.siu.saku.jooq.tables.SakuPreRegister;
import org.siu.saku.jooq.tables.SakuShorturlMap;
import org.siu.saku.jooq.tables.SakuUrlMap;
import org.siu.saku.jooq.tables.records.SakuPreRegisterRecord;
import org.siu.saku.jooq.tables.records.SakuShorturlMapRecord;
import org.siu.saku.jooq.tables.records.SakuUrlMapRecord;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ganxu</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SakuPreRegisterRecord, Long> IDENTITY_SAKU_PRE_REGISTER = Identities0.IDENTITY_SAKU_PRE_REGISTER;
    public static final Identity<SakuShorturlMapRecord, Long> IDENTITY_SAKU_SHORTURL_MAP = Identities0.IDENTITY_SAKU_SHORTURL_MAP;
    public static final Identity<SakuUrlMapRecord, Long> IDENTITY_SAKU_URL_MAP = Identities0.IDENTITY_SAKU_URL_MAP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SakuPreRegisterRecord> SAKU_PRE_REGISTER_PKEY = UniqueKeys0.SAKU_PRE_REGISTER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SakuPreRegisterRecord, Long> IDENTITY_SAKU_PRE_REGISTER = Internal.createIdentity(SakuPreRegister.SAKU_PRE_REGISTER, SakuPreRegister.SAKU_PRE_REGISTER.ID);
        public static Identity<SakuShorturlMapRecord, Long> IDENTITY_SAKU_SHORTURL_MAP = Internal.createIdentity(SakuShorturlMap.SAKU_SHORTURL_MAP, SakuShorturlMap.SAKU_SHORTURL_MAP.ID);
        public static Identity<SakuUrlMapRecord, Long> IDENTITY_SAKU_URL_MAP = Internal.createIdentity(SakuUrlMap.SAKU_URL_MAP, SakuUrlMap.SAKU_URL_MAP.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<SakuPreRegisterRecord> SAKU_PRE_REGISTER_PKEY = Internal.createUniqueKey(SakuPreRegister.SAKU_PRE_REGISTER, "saku_pre_register_pkey", SakuPreRegister.SAKU_PRE_REGISTER.ID);
    }
}
