/*
 * This file is generated by jOOQ.
 */
package org.siu.saku.jooq.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.siu.saku.jooq.Keys;
import org.siu.saku.jooq.tables.records.SakuShorturlMapRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SakuShorturlMap extends TableImpl<SakuShorturlMapRecord> {

    private static final long serialVersionUID = -1416930182;

    /**
     * The reference instance of <code>ganxu.saku_shorturl_map</code>
     */
    public static final SakuShorturlMap SAKU_SHORTURL_MAP = new SakuShorturlMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SakuShorturlMapRecord> getRecordType() {
        return SakuShorturlMapRecord.class;
    }

    /**
     * The column <code>ganxu.saku_shorturl_map.id</code>. 短链ID（自增生成）
     */
    public final TableField<SakuShorturlMapRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("nextval('saku_shorturl_map_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "短链ID（自增生成）");

    /**
     * The column <code>ganxu.saku_shorturl_map.l_url</code>. 长链
     */
    public final TableField<SakuShorturlMapRecord, String> L_URL = createField(DSL.name("l_url"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "长链");

    /**
     * The column <code>ganxu.saku_shorturl_map.l_url_md5</code>. 长链MD5
     */
    public final TableField<SakuShorturlMapRecord, String> L_URL_MD5 = createField(DSL.name("l_url_md5"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "长链MD5");

    /**
     * The column <code>ganxu.saku_shorturl_map.create_time</code>. 创建时间
     */
    public final TableField<SakuShorturlMapRecord, Timestamp> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>ganxu.saku_shorturl_map</code> table reference
     */
    public SakuShorturlMap() {
        this(DSL.name("saku_shorturl_map"), null);
    }

    /**
     * Create an aliased <code>ganxu.saku_shorturl_map</code> table reference
     */
    public SakuShorturlMap(String alias) {
        this(DSL.name(alias), SAKU_SHORTURL_MAP);
    }

    /**
     * Create an aliased <code>ganxu.saku_shorturl_map</code> table reference
     */
    public SakuShorturlMap(Name alias) {
        this(alias, SAKU_SHORTURL_MAP);
    }

    private SakuShorturlMap(Name alias, Table<SakuShorturlMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private SakuShorturlMap(Name alias, Table<SakuShorturlMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SakuShorturlMap(Table<O> child, ForeignKey<O, SakuShorturlMapRecord> key) {
        super(child, key, SAKU_SHORTURL_MAP);
    }


    @Override
    public Identity<SakuShorturlMapRecord, Long> getIdentity() {
        return Keys.IDENTITY_SAKU_SHORTURL_MAP;
    }

    @Override
    public SakuShorturlMap as(String alias) {
        return new SakuShorturlMap(DSL.name(alias), this);
    }

    @Override
    public SakuShorturlMap as(Name alias) {
        return new SakuShorturlMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuShorturlMap rename(String name) {
        return new SakuShorturlMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuShorturlMap rename(Name name) {
        return new SakuShorturlMap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
