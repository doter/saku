/*
 * This file is generated by jOOQ.
 */
package org.siu.saku.jooq.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.siu.saku.jooq.Keys;
import org.siu.saku.jooq.tables.records.SakuUrlMapRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SakuUrlMap extends TableImpl<SakuUrlMapRecord> {

    private static final long serialVersionUID = -857492337;

    /**
     * The reference instance of <code>ganxu.saku_url_map</code>
     */
    public static final SakuUrlMap SAKU_URL_MAP = new SakuUrlMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SakuUrlMapRecord> getRecordType() {
        return SakuUrlMapRecord.class;
    }

    /**
     * The column <code>ganxu.saku_url_map.id</code>. ID
     */
    public final TableField<SakuUrlMapRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("nextval('saku_url_map_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "ID");

    /**
     * The column <code>ganxu.saku_url_map.l_url</code>. 长链
     */
    public final TableField<SakuUrlMapRecord, String> L_URL = createField(DSL.name("l_url"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "长链");

    /**
     * The column <code>ganxu.saku_url_map.s_url</code>. 短链
     */
    public final TableField<SakuUrlMapRecord, String> S_URL = createField(DSL.name("s_url"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.field("nextval('saku_url_map_seq'::regclass)", org.jooq.impl.SQLDataType.VARCHAR)), this, "短链");

    /**
     * The column <code>ganxu.saku_url_map.create_time</code>. 创建时间
     */
    public final TableField<SakuUrlMapRecord, Timestamp> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>ganxu.saku_url_map</code> table reference
     */
    public SakuUrlMap() {
        this(DSL.name("saku_url_map"), null);
    }

    /**
     * Create an aliased <code>ganxu.saku_url_map</code> table reference
     */
    public SakuUrlMap(String alias) {
        this(DSL.name(alias), SAKU_URL_MAP);
    }

    /**
     * Create an aliased <code>ganxu.saku_url_map</code> table reference
     */
    public SakuUrlMap(Name alias) {
        this(alias, SAKU_URL_MAP);
    }

    private SakuUrlMap(Name alias, Table<SakuUrlMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private SakuUrlMap(Name alias, Table<SakuUrlMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SakuUrlMap(Table<O> child, ForeignKey<O, SakuUrlMapRecord> key) {
        super(child, key, SAKU_URL_MAP);
    }

    @Override
    public Identity<SakuUrlMapRecord, Long> getIdentity() {
        return Keys.IDENTITY_SAKU_URL_MAP;
    }

    @Override
    public SakuUrlMap as(String alias) {
        return new SakuUrlMap(DSL.name(alias), this);
    }

    @Override
    public SakuUrlMap as(Name alias) {
        return new SakuUrlMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuUrlMap rename(String name) {
        return new SakuUrlMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuUrlMap rename(Name name) {
        return new SakuUrlMap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
