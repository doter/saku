/*
 * This file is generated by jOOQ.
 */
package org.siu.saku.jooq.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.siu.saku.jooq.Indexes;
import org.siu.saku.jooq.Keys;
import org.siu.saku.jooq.tables.records.SakuPreRegisterRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SakuPreRegister extends TableImpl<SakuPreRegisterRecord> {

    private static final long serialVersionUID = 133358052;

    /**
     * The reference instance of <code>ganxu.saku_pre_register</code>
     */
    public static final SakuPreRegister SAKU_PRE_REGISTER = new SakuPreRegister();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SakuPreRegisterRecord> getRecordType() {
        return SakuPreRegisterRecord.class;
    }

    /**
     * The column <code>ganxu.saku_pre_register.id</code>. 主键
     */
    public final TableField<SakuPreRegisterRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("nextval('saku_pre_register_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "主键");

    /**
     * The column <code>ganxu.saku_pre_register.start_no</code>. 开始编号
     */
    public final TableField<SakuPreRegisterRecord, Long> START_NO = createField(DSL.name("start_no"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "开始编号");

    /**
     * The column <code>ganxu.saku_pre_register.end_no</code>. 结束编号
     */
    public final TableField<SakuPreRegisterRecord, Long> END_NO = createField(DSL.name("end_no"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "结束编号");

    /**
     * The column <code>ganxu.saku_pre_register.create_time</code>. 创建时间
     */
    public final TableField<SakuPreRegisterRecord, Timestamp> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>ganxu.saku_pre_register</code> table reference
     */
    public SakuPreRegister() {
        this(DSL.name("saku_pre_register"), null);
    }

    /**
     * Create an aliased <code>ganxu.saku_pre_register</code> table reference
     */
    public SakuPreRegister(String alias) {
        this(DSL.name(alias), SAKU_PRE_REGISTER);
    }

    /**
     * Create an aliased <code>ganxu.saku_pre_register</code> table reference
     */
    public SakuPreRegister(Name alias) {
        this(alias, SAKU_PRE_REGISTER);
    }

    private SakuPreRegister(Name alias, Table<SakuPreRegisterRecord> aliased) {
        this(alias, aliased, null);
    }

    private SakuPreRegister(Name alias, Table<SakuPreRegisterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SakuPreRegister(Table<O> child, ForeignKey<O, SakuPreRegisterRecord> key) {
        super(child, key, SAKU_PRE_REGISTER);
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SAKU_PRE_REGISTER_PKEY);
    }

    @Override
    public Identity<SakuPreRegisterRecord, Long> getIdentity() {
        return Keys.IDENTITY_SAKU_PRE_REGISTER;
    }

    @Override
    public UniqueKey<SakuPreRegisterRecord> getPrimaryKey() {
        return Keys.SAKU_PRE_REGISTER_PKEY;
    }

    @Override
    public List<UniqueKey<SakuPreRegisterRecord>> getKeys() {
        return Arrays.<UniqueKey<SakuPreRegisterRecord>>asList(Keys.SAKU_PRE_REGISTER_PKEY);
    }

    @Override
    public SakuPreRegister as(String alias) {
        return new SakuPreRegister(DSL.name(alias), this);
    }

    @Override
    public SakuPreRegister as(Name alias) {
        return new SakuPreRegister(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuPreRegister rename(String name) {
        return new SakuPreRegister(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SakuPreRegister rename(Name name) {
        return new SakuPreRegister(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
