/*
 * This file is generated by jOOQ.
 */
package org.siu.saku.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.siu.saku.jooq.tables.SakuShorturlMap;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SakuShorturlMapRecord extends TableRecordImpl<SakuShorturlMapRecord> implements Record4<Long, String, String, Timestamp> {

    private static final long serialVersionUID = -356027385;

    /**
     * Setter for <code>ganxu.saku_shorturl_map.id</code>. 短链ID（自增生成）
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ganxu.saku_shorturl_map.id</code>. 短链ID（自增生成）
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ganxu.saku_shorturl_map.l_url</code>. 长链
     */
    public void setLUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ganxu.saku_shorturl_map.l_url</code>. 长链
     */
    public String getLUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ganxu.saku_shorturl_map.l_url_md5</code>. 长链MD5
     */
    public void setLUrlMd5(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ganxu.saku_shorturl_map.l_url_md5</code>. 长链MD5
     */
    public String getLUrlMd5() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ganxu.saku_shorturl_map.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>ganxu.saku_shorturl_map.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SakuShorturlMap.SAKU_SHORTURL_MAP.ID;
    }

    @Override
    public Field<String> field2() {
        return SakuShorturlMap.SAKU_SHORTURL_MAP.L_URL;
    }

    @Override
    public Field<String> field3() {
        return SakuShorturlMap.SAKU_SHORTURL_MAP.L_URL_MD5;
    }

    @Override
    public Field<Timestamp> field4() {
        return SakuShorturlMap.SAKU_SHORTURL_MAP.CREATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLUrl();
    }

    @Override
    public String component3() {
        return getLUrlMd5();
    }

    @Override
    public Timestamp component4() {
        return getCreateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLUrl();
    }

    @Override
    public String value3() {
        return getLUrlMd5();
    }

    @Override
    public Timestamp value4() {
        return getCreateTime();
    }

    @Override
    public SakuShorturlMapRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SakuShorturlMapRecord value2(String value) {
        setLUrl(value);
        return this;
    }

    @Override
    public SakuShorturlMapRecord value3(String value) {
        setLUrlMd5(value);
        return this;
    }

    @Override
    public SakuShorturlMapRecord value4(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public SakuShorturlMapRecord values(Long value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SakuShorturlMapRecord
     */
    public SakuShorturlMapRecord() {
        super(SakuShorturlMap.SAKU_SHORTURL_MAP);
    }

    /**
     * Create a detached, initialised SakuShorturlMapRecord
     */
    public SakuShorturlMapRecord(Long id, String lUrl, String lUrlMd5, Timestamp createTime) {
        super(SakuShorturlMap.SAKU_SHORTURL_MAP);

        set(0, id);
        set(1, lUrl);
        set(2, lUrlMd5);
        set(3, createTime);
    }
}
